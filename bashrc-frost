# vim: ft=sh

[[ $- != *i* ]] && return

. ~/lib/dotfiles/bashrc-rain

unalias journalctl

fxdb() { (nssdb="$HOME/.mozilla/firefox/r0fd79nc.default"; "$@"); }
thdb() { (nssdb="$HOME/.thunderbird/7pkkqarz.default"; "$@"); }

## Network hackery

add-vlan() {
	local dev=$1 addr=$2
	sudo: ip link add link "${dev%.*}" name "$dev" type vlan id "${dev##*.}"
	sudo: ip link set "$dev" up
	if [[ $addr ]]; then
		[[ $addr == */* ]] || addr+="/16"
		sudo: ip addr add "$addr" dev "$dev"
	fi
}

run-autoip() {
	sudo: avahi-autoipd --force-bind "${1:-eth0}" "${@:2}"
}

run-dhclient() {
	sudo: dhclient -4 -d "${1:-eth0}" "${@:2}"
}

run-dhcpcd() {
	sudo: dhcpcd --ipv4only --noarp --reboot 0 --timeout 0 --nobackground \
		--nohook resolv.conf --debug "${1:-eth0}" "${@:2}"
}

ecap() {
	sudo: tcpdump -n -i "${1:-eth0}" "${@:2}"
}

earp() {
	ecap "$1" -e "arp or (udp port 67 or 68)"
}

ecn() {
	case $1 in
	    1|on)  sudo: sysctl -q net.ipv4.tcp_ecn=1;;
	    0|off) sudo: sysctl -q net.ipv4.tcp_ecn=0;;
	    *)     sysctl net.ipv4.tcp_ecn;;
	esac
}

ukip() {
	local arg dev=eth0
	for arg; do
		case $arg in
		up)
			do:   nmcli dev set $dev managed no
			sudo: ip link set $dev up
			sudo: ip addr flush dev $dev
			sudo: ip addr add 169.254.0.42/16 dev $dev scope link
			sudo: ip addr add 192.168.0.42/24 dev $dev
			sudo: ip addr add 192.168.1.42/24 dev $dev
			;;
		down)
			sudo: ip addr flush dev $dev
			do:   nmcli dev set $dev managed yes
			;;
		*)
			if [[ -e /sys/class/net/$arg ]]; then
				dev=$arg
			else
				echo "bad arg '$arg'" >&2
			fi
			;;
		esac
	done
}

ukdns() {
	local server='uk-main2.utenos-kolegija.lt'
	local zone='utenos-kolegija.lt'

	do: samba-tool dns "$1" "$server" "$zone" "${@:2}"
}

uredboot() { do: telnet 192.168.1.20 9000; }
