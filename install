#!/usr/bin/env bash

for dir in ~/lib/code ~/etc/code ~/code; do
	if [[ -d $dir/bin ]]; then
		PATH=$dir/bin:$PATH
		break
	fi
done

. lib.bash || exit

progname='dotfiles/install'

trash() {
	local file
	for file; do
		if [ ! -e "$file" ]; then
			continue
		elif [ -k "$file" ]; then
			trace "ignoring sticky $file"
			continue
		else
			local hash=$(sha1sum "$file" | awk '{print $1}')
			if case $hash in
				# Debian ~/.profile
				79d58526d0e0bf4df4f01b383ed3f49c428aaa2a) true;;
				# Debian ~/.bash_logout
				dc216ac4a4c232815731979db6e494f315b507dd) true;;
				*) false;;
			esac; then
				rm -f "$file"
				continue
			fi
			if [ ! -d "$trash" ]; then
				mkdir -pm 0700 "$trash"
			fi
			echo "backing up $file -> $trash"
			mv "$file" "$trash/old_${file##*/}"
		fi
	done
}

link() {
	local target=$dir/${1%/} link=${2:-$HOME/.$1}
	if [ ! -e "$target" ]; then
		err "link target is missing: $link -> $target"
		return
	elif [ -e "$link" ]; then
		if [ -k "$link" ]; then
			trace "ignoring sticky $link"
			return
		elif [ -h "$link" ]; then
			rm -f "$link"
		else
			trash "$link"
		fi
	else
		local linkdir=${link%/*}
		if [ ! -d "$linkdir" ]; then
			mkdir -p "$linkdir"
		fi
	fi
	trace "linking $link -> $target"
	sym -f "$target" "$link"
}

dcopy() {
	local source=$dir/${1%/} dir=${2:-$HOME/.$1}
	if [ ! -d "$source" ]; then
		err "dcopy source is missing: $source"
		return
	elif [ -d "$dir" ]; then
		trace "ignoring existing dir $dir"
		return
	else
		mkdir -p "$dir"
	fi
	trace "copying $dir <- $source"
	cp -r "$source"/* "$dir"
}

if [[ -t 0 ]]; then
	VERBOSE=1
fi

dir=$(dirname "$(sym -R "$0")")
trash=~/tmp

cd "$dir"

trash ~/.{login,logout}
trash ~/.bash_{login,profile,logout}
trash ~/.{sh,csh}rc
rm -f ~/.viminfo

link bashrc
link inputrc
link profile
link git ~/.config/git
link vim ~/.vim
link vim ~/.config/nvim

if [ -h ~/.htoprc ]; then
	rm -f ~/.htoprc
fi

if [ -d ~/.config/htop ]; then
	rm -f ~/.htoprc
	if ! grep -qs "^#" ~/.config/htop/htoprc; then
		cp htoprc ~/.config/htop/htoprc
	fi
elif [ ! -e ~/.htoprc ]; then
	mkdir -p ~/.config/htop
	cp htoprc ~/.config/htop/htoprc
fi

(umask 077; touch ~/.config/git/credentials)

if have makepkg; then
	link pacman/makepkg.conf ~/.config/pacman/makepkg.conf
fi

if have msmtp; then
	link mail/msmtprc ~/.msmtprc
	chmod 600 ~/.msmtprc
fi

if have ssh; then
	trace "updating $HOME/.ssh/config"
	ssh/generate
	link ssh/known_hosts
fi

if have tmux; then
	link tmux.conf
fi

if [ "$DISPLAY" ]; then
	link gui/XCompose ~/.XCompose

	if ! [ -d ~/.local/share/themes/Adwaita ]; then
		mkdir -p ~/.local/share/themes/Adwaita
		ln -s /usr/share/themes/Clearlooks/gtk-2.0 ~/.local/share/themes/Adwaita/
	fi

	[ -d ~/.thumbnails ] || sym -f ~/.cache/thumbnails   ~/.thumbnails
	[ -d ~/.fonts ]      || sym -f ~/.local/share/fonts  ~/.fonts
	[ -d ~/.themes ]     || sym -f ~/.local/share/themes ~/.themes

	if have fc-cache && [ ! -d ~/.config/fontconfig ]; then
		link gui/fontconfig ~/.config/fontconfig
	fi

	if have openbox; then
		link gui/openbox-rc.xml ~/.config/openbox/rc.xml
		link gui/openbox-autostart ~/.config/openbox/autostart
	fi

	if [ ! -f ~/.config/user-dirs.dirs ]; then
		cp gui/user-dirs.dirs ~/.config/user-dirs.dirs
	fi
fi

exit 0
