# vim: ft=sh

[[ $- != *i* ]] && return

## Completion

if [[ -e /usr/share/bash-completion/bash_completion ]]; then
	. /usr/share/bash-completion/bash_completion
	# redeclare after bash-completion nukes it
	have() { command -v "$@" &>/dev/null; }
fi

## Aliases

alias clock='tty-clock -c'
alias RM='/bin/rm -I'

rm() {
	local opts=() arg path nuke=() trash=()
	for arg; do
		if [[ $arg == -* ]]; then
			opts+=("$arg")
		elif case $(realpath -s "$arg") in
		# skip filesystems
		~/Private/*)		false;;
		~/fs/*)			false;;
		~/@*)			false;;
		# skip system stuff
		~/lib/*)		false;;
		~/pkg/*)		false;;
		~/src/*)		false;;
		# skip dotfiles and temp
		#~/.*)			false;;
		~/.local/share/Trash/*)	false;;
		*.tmp)			false;;
		.unison.*)		false;;
		# include everything else in $HOME
		~/*)			true;;
		# include removable drives
		/media/*)		true;;
		/run/media/*)		true;;
		# exclude everything else elsewhere
		*)			false;;
		esac; then
			trash+=("$arg")
		else
			nuke+=("$arg")
		fi
	done
	if (( ${#trash[@]} )); then
		trash "${opts[@]}" -- "${trash[@]}"
	fi &&
	if (( ${#nuke[@]} )); then
		command rm -I "${opts[@]}" -- "${nuke[@]}"
	fi
}

rpw() {
	local pw=$(tr -dc "A-Za-z0-9" < /dev/urandom | head -c "${1:-12}")
	echo "$pw"
	echo -n "$pw" | gclip
}

youtube-dl() {
	local cmd=()
	cmd+=(
		systemd-inhibit
		--who "youtube-dl"
		--what "sleep"
		--why "Downloading a video"
	)
	cmd+=(
		gnome-inhibit -A
		--who "youtube-dl"
		--what "suspend"
		--why "Downloading a video"
	)
	cmd+=(
		youtube-dl
		--console-title
		--continue
		"$@"
	)
	"${cmd[@]}"
}

do:() { (PS4='+ '; set -x; "$@") }

sudo:() {
	if (( UID ))
		then do: sudo "$@"
		else do: "$@"
	fi
}

add-vlan() {
	sudo: ip link add link "${1%.*}" name "$1" type vlan id "${1##*.}"
	if [[ $2 == dhcp ]]; then
		use-dhclient "$1"
	elif [[ $2 ]]; then
		sudo: ip link set "$1" up
		sudo: ip addr add "$2" dev "$1"
	fi
}

use-dhcp() {
	sudo: dhcpcd --ipv4only --noarp --reboot 0 --timeout 0 --nobackground \
		--nohook resolv.conf --debug "${1:-eth0}" "${@:2}"
}

use-dhclient() {
	sudo: dhclient -4 -d -v "${1:-eth0}" "${@:2}"
}

use-autoip() {
	sudo: avahi-autoipd --force-bind "${1:-eth0}" "${@:2}"
}

ecap() {
	sudo: tcpdump -n -i "${dev:-eth0}" "$@"
}

ecn() {
	case $1 in
	    1|y*|on)
		sudo: sysctl -q net.ipv4.tcp_ecn=1;;
	    0|n*|off)
		sudo: sysctl -q net.ipv4.tcp_ecn=0;;
	    *)
		sysctl net.ipv4.tcp_ecn;;
	esac
}

ukip() {
	sudo: ip link set eth0 up
	sudo: ip addr add 169.254.0.1/16  dev eth0 scope link
	sudo: ip addr add 10.128.0.42/16  dev eth0
	sudo: ip addr add 192.168.0.42/24 dev eth0
	sudo: ip addr add 192.168.1.42/24 dev eth0
}

vnet() {
	sudo: systemctl "${1:-status}" vm-network.target
}

## Prompt

_nolid_prompt() {
	if [[ -e "$XDG_RUNTIME_DIR/nolid.hold" ]]; then
		item_name_sfx=':[lid]'
	elif [[ -e "$XDG_RUNTIME_DIR/nolid.lock" ]]; then
		item_name_sfx=':lid'
	else
		item_name_sfx=''
	fi
	fmt_name_sfx='|38;5;238'
}

PROMPT_COMMAND+="; _nolid_prompt"
