#!/usr/bin/env bash
# Generator for ~/.ssh/config

set -e

PATH="$HOME/code/bin:$PATH"

. libfilterfile.bash

ssh_version() {
	echo "${SSHPRODUCT:=$(ssh -V 2>&1)}"
}

# match_eval helper functions

Host() {
	: ${FQDN:=$(fqdn)}
	match_hostname "$1"
}

Product() {
	ssh_version | grep -qs "^${1}_"
}

OpenSSH() {
	Product OpenSSH
}

Version() {
	local minversion=$1
	local curversion=${SSHVERSION:=$(ssh_version |
				sed -rn 's/^\w+_([^ ]+),.*/\1/p')}
	minversion=${minversion%p*}.
	curversion=${curversion%p*}.
	local loop=0

	while [[ $minversion && $curversion ]]; do
		local minhead=${minversion%%.*}
		local curhead=${curversion%%.*}
		if (( minhead > curhead )); then
			debug "compare $minhead > $curhead, too old"
			return 1
		elif (( minhead < curhead )); then
			debug "compare $minhead < $curhead, too new"
			return 0
		else
			debug "compare $minhead = $curhead"
		fi
		minversion=${minversion#*.}.
		curversion=${curversion#*.}.
		(( ++loop > 10 )) && break
	done
}

# generator

generate() {
	cat "${input[@]}" 2>/dev/null | filter_file match_eval
}

input=( ~/lib/dotfiles/ssh/config
	~/lib/dotfiles/ssh/config-$HOSTNAME )

output=".generated-config-$HOSTNAME"

if [[ $1 == "--test" ]]; then
	generate
else
	if [[ ! -d ~/.ssh ]]; then
		debug "ok, ~/.ssh doesn't exist yet - creating"
		mkdir -p -m 0700 ~/.ssh
		true
	elif [[ ! -e ~/.ssh/config ]]; then
		debug "ok, config doesn't exist yet - creating"
		true
	elif [[ ~/.ssh/config -ef ~/.ssh/$output.gen ]]; then
		debug "ok, very old generated config found - removing"
		rm -f ~/.ssh/config ~/.ssh/$output.gen
		true
	elif [[ -L ~/.ssh/config-$HOSTNAME \
			&& ~/.ssh/config -ef ~/.ssh/config-$HOSTNAME ]]; then
		debug "ok, old generated config found - removing"
		rm -f ~/.ssh/config ~/.ssh/config-$HOSTNAME
		true
	elif [[ ~/.ssh/config -ef ~/.ssh/$output ]]; then
		debug "ok, generated config found - updating"
		true
	elif [[ -L ~/.ssh/config ]]; then
		debug "ok, symlinked config found - overriding"
		rm -f ~/.ssh/config
	else
		die "Refusing to overwrite local ~/.ssh/config"
	fi
	generate > ~/.ssh/$output
	ln -sf $output ~/.ssh/config
fi
